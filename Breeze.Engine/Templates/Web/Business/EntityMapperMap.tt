<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="Breeze.Engine.Helpers" #>
using AutoMapper;
using <#= MetaData.PortalBusinessNamespace #>.<# this.Write(this.GetAreaName()); #>.<#= MetaData.ClassName #>.ViewModels;

namespace <#= MetaData.PortalBusinessNamespace #>.<# this.Write(this.GetAreaName()); #>.<#= MetaData.ClassName #>
{
    public class <#= MetaData.ClassName #>ProfileMap : Profile
    {
        protected override void Configure()
        {
            Mapper.CreateMap<Models.<# this.Write(this.GetAreaName()); #>.<#= MetaData.ClassName #>, <#= MetaData.ClassName #>ViewModel>()
							<# this.IgnoreViewModelReferenceTypes(); #>;
			Mapper.CreateMap<<#= MetaData.ClassName #>ViewModel, Models.<# this.Write(this.GetAreaName()); #>.<#= MetaData.ClassName #>>()
							<# this.IgnoreMapReferenceTypes(); #>;
            Mapper.AssertConfigurationIsValid();
        }

        public override string ProfileName
        {
            get { return this.GetType().Name; }
        }
    }
}